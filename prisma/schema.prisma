generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model appointment {
  id                                      String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date_time                               DateTime @db.Timestamp(6)
  customer_id                             String?  @db.Uuid
  medical_staff_id                        String?  @db.Uuid
  created_at                              DateTime @default(now()) @db.Timestamp(6)
  updated_at                              DateTime @default(now()) @db.Timestamp(6)
  user_appointment_customer_idTouser      user?    @relation("appointment_customer_idTouser", fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_appointment_medical_staff_idTouser user?    @relation("appointment_medical_staff_idTouser", fields: [medical_staff_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model insurance {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider_name String   @db.VarChar(255)
  customer_id   String?  @db.Uuid
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  user          user?    @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                             String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                                          String         @unique @db.VarChar(255)
  firstName                                      String?        @db.VarChar(255)
  lastName                                       String?        @db.VarChar(255)
  roq_user_id                                    String         @db.VarChar(255)
  tenant_id                                      String         @db.VarChar(255)
  created_at                                     DateTime       @default(now()) @db.Timestamp(6)
  updated_at                                     DateTime       @default(now()) @db.Timestamp(6)
  appointment_appointment_customer_idTouser      appointment[]  @relation("appointment_customer_idTouser")
  appointment_appointment_medical_staff_idTouser appointment[]  @relation("appointment_medical_staff_idTouser")
  insurance                                      insurance[]
  organization                                   organization[]
}
